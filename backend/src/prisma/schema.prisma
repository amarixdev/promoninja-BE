// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin", "darwin-arm64"]
}

model Podcast {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  title           String     @unique
  imageUrl        String?
  sponsorId       String[]   @db.ObjectId
  category        Category[] @relation(fields: [categoryId], references: [id])
  categoryId      String[]   @db.ObjectId
  sponsors        Sponsor[]  @relation(fields: [sponsorId], references: [id])
  offer           Offer[]
  publisher       String
  description     String?
  backgroundColor String?
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  podcast   Podcast[] @relation(fields: [podcastId], references: [id])
  podcastId String[]  @db.ObjectId
}

model Sponsor {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  name              String            @unique
  imageUrl          String?
  url               String
  podcastId         String[]          @db.ObjectId
  podcast           Podcast[]         @relation(fields: [podcastId], references: [id])
  category          SponsorCategory[] @relation(fields: [sponsorCategoryId], references: [id])
  sponsorCategoryId String[]          @db.ObjectId
}

model SponsorCategory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  sponsor   Sponsor[] @relation(fields: [sponsorId], references: [id])
  sponsorId String[]  @db.ObjectId
  imageUrl  String?
}

type Offer {
  sponsor     String
  description String
  url         String
}
